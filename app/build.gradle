plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.android.gms.oss-licenses-plugin'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "jp.co.greensys.wetherapp"
        minSdk 28
        targetSdk 31
        versionCode 1
        versionName '2.1'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Weather API
        buildConfigField("String", "WEATHER_API_BASE_URL", "\"http://api.openweathermap.org/\"")
        def properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def API_KEY = properties.getProperty("weather_api_key")
        buildConfigField("String", "WEATHER_API_KEY", "\"${API_KEY}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    dataBinding {
        enabled true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_ver"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_ver"
    implementation 'androidx.core:core-splashscreen:1.0.0-alpha02'

    // gson
    implementation 'com.google.code.gson:gson:2.8.9'
    // glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    // OSSライセンス表記
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    // Fluent Icons
    implementation 'com.microsoft.design:fluent-system-icons:1.1.154'
    // Retrofit2
    def retrofit_ver = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_ver"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_ver"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_ver"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'
    // MPAndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    // Rx
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxkotlin:3.0.1'
    implementation 'io.reactivex.rxjava3:rxjava:3.1.3'

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_ver"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_ver"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}